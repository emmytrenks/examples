Abstraction - general model of something
  i,e, a dog, a house

Primative Data Type - basic data type defined as part of the language
  int, long, char, double

Abstract Data Type - created by the programmer, composed of one or more data types

Structure - grouping several variables together into a single item
  tag - the name of the structure
  members - variable declarations inside the structure
  dont forget the ;
  this does not define a variablem it defines a TYPE

  you cannot compare structs directly (yet)
    you must compare each member using the dot operator
  
  initializing

  MyStruct x = { 1, 2, "tony" };
  you can initialize only some of the members but must not skip
 
   -- or --

  x.number = 1;
  x.number2 = 2;
  x.text = "tony";

  can be defined in arrays

  MyStruct[5];
  each instance is accessed through subscript notation []
  fields are then accessed using the dot operator
  i.e. MyStuct[3].number = ...

Nested Structures
  use the dot operator multiple times to refer to fields of fields

  Struct1.Struct2.field

Pointers to Structures
  use * to dereference
  use () to make sure order of operations is handled correctly for member access
  (*myPointer).member
  there is a shotcut for this
  myPointer->member

 